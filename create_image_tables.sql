-- SQL Script to create the article_image and cluster_image tables

-- Create article_image table
CREATE TABLE IF NOT EXISTS article_image (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  article_id BIGINT NOT NULL,
  image_url TEXT NOT NULL,
  original_url TEXT,
  author TEXT,
  source TEXT,
  FOREIGN KEY (article_id) REFERENCES "NewsArticles" (id) ON DELETE CASCADE
);

-- Create cluster_image table
CREATE TABLE IF NOT EXISTS cluster_image (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  cluster_id UUID NOT NULL,
  image_url TEXT NOT NULL,
  original_url TEXT,
  author TEXT,
  source TEXT,
  FOREIGN KEY (cluster_id) REFERENCES "ClusterTags" (id) ON DELETE CASCADE
);

-- Add indexes for faster lookups
CREATE INDEX IF NOT EXISTS article_image_article_id_idx ON article_image (article_id);
CREATE INDEX IF NOT EXISTS cluster_image_cluster_id_idx ON cluster_image (cluster_id);

-- Add RLS policies for basic security
ALTER TABLE article_image ENABLE ROW LEVEL SECURITY;
ALTER TABLE cluster_image ENABLE ROW LEVEL SECURITY;

-- Create policies that allow authenticated users to access the tables
CREATE POLICY article_image_select_policy ON article_image 
  FOR SELECT USING (auth.role() = 'authenticated');

CREATE POLICY article_image_insert_policy ON article_image 
  FOR INSERT WITH CHECK (auth.role() = 'authenticated');

CREATE POLICY cluster_image_select_policy ON cluster_image 
  FOR SELECT USING (auth.role() = 'authenticated');

CREATE POLICY cluster_image_insert_policy ON cluster_image 
  FOR INSERT WITH CHECK (auth.role() = 'authenticated');
